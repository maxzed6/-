        -:    0:Source:/root/CLionProjects/FileServer/main.cpp
        -:    0:Graph:/root/CLionProjects/FileServer/cmake-build-debug-coverage/CMakeFiles/FileServer.dir/main.cpp.gcno
        -:    0:Data:/root/CLionProjects/FileServer/cmake-build-debug-coverage/CMakeFiles/FileServer.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <unistd.h>
        -:    3:#include <arpa/inet.h>
        -:    4:#include <sys/socket.h>
        -:    5:#include <pthread.h>
        -:    6:#include <time.h>
        -:    7:#include <cstring>
        -:    8:#include <fstream>
        -:    9:
        -:   10:using namespace std;
        -:   11:
        -:   12:int serverfd;
        -:   13:int fd;
        -:   14:
function _Z4initv called 1 returned 0% blocks executed 50%
        1:   15:void init(){
        1:   16:    serverfd = socket(PF_INET, SOCK_STREAM, 0);
        1:   16-block  0
call    0 returned 1
        1:   17:    if (serverfd == -1){
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   18:        perror("创建socket失败");
    %%%%%:   18-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   19:        exit(-1);
    %%%%%:   19-block  0
call    0 never executed
        -:   20:    }
        -:   21:    struct sockaddr_in addr;
        1:   22:    addr.sin_family = PF_INET;
        1:   23:    addr.sin_port = htons(2333);
        1:   24:    addr.sin_addr.s_addr = htonl(INADDR_ANY);
        1:   25:    if (bind(serverfd, (struct sockaddr*)&addr, sizeof(addr)) == -1){
        1:   25-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   26:        perror("绑定失败");
        1:   26-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   27:        exit(-1);
        1:   27-block  0
call    0 returned 0
        -:   28:    }
    #####:   29:    if (listen(serverfd, 100) == -1){
    %%%%%:   29-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   30:        perror("设置监听失败");
    %%%%%:   30-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   31:        exit(-1);
    %%%%%:   31-block  0
call    0 never executed
        -:   32:    }
    #####:   33:}
    %%%%%:   33-block  0
        -:   34:
function _Z5splitPKcPcS1_c called 0 returned 0% blocks executed 0%
    #####:   35:void split(const char* info, char* user, char* passwd, char dil){
    #####:   36:    int i = 0;
    %%%%%:   36-block  0
        -:   37:    int j;
    #####:   38:    for (; ; ++i) {
    #####:   39:        if (info[i] == dil){
    %%%%%:   39-block  0
branch  0 never executed
branch  1 never executed
    #####:   40:            for (j = i+1; j < strlen(info); ++j) {
    %%%%%:   40-block  0
    %%%%%:   40-block  1
branch  0 never executed
branch  1 never executed
    #####:   41:                passwd[j-i-1] = info[j];
    %%%%%:   41-block  0
        -:   42:            }
    #####:   43:            break;
    %%%%%:   43-block  0
        -:   44:        } else {
    #####:   45:            user[i] = info[i];
    %%%%%:   45-block  0
        -:   46:        }
        -:   47:    }
    #####:   48:    user[i] = '\0';
    #####:   49:    passwd[j-i-1] = '\0';
    #####:   50:}
        -:   51:
function _Z12userRegisterv called 0 returned 0% blocks executed 0%
    #####:   52:bool userRegister(){
    #####:   53:    char buff[1024] = {0};
    #####:   54:    recv(fd, buff, 1024, 0);
    %%%%%:   54-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   55:    ifstream in("/tmp/info.txt");
    %%%%%:   55-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    $$$$$:   55-block  1
call    4 never executed
    #####:   56:    string info;
    %%%%%:   56-block  0
call    0 never executed
    %%%%%:   56-block  1
call    1 never executed
    $$$$$:   56-block  2
call    2 never executed
        -:   57:    char user[100], passwd[100], user1[100];
    #####:   58:    split(buff, user1, passwd, ':');
call    0 never executed
    #####:   59:    while (getline(in, info)){
    %%%%%:   59-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   59-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   59-block  2
branch  6 never executed
branch  7 never executed
    %%%%%:   59-block  3
    #####:   60:        split(info.c_str(), user, passwd, ':');
    %%%%%:   60-block  0
call    0 never executed
call    1 never executed
    #####:   61:        if (strcmp(user1,user) == 0){
branch  0 never executed
branch  1 never executed
    #####:   62:            send(fd, "用户已存在", sizeof("用户已存在"), 0);
    %%%%%:   62-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   63:            in.close();
    %%%%%:   63-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   64:            return false;
    %%%%%:   64-block  0
        -:   65:        }
        -:   66:    }
    #####:   67:    FILE *file = fopen("/tmp/info.txt", "a+");
    %%%%%:   67-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   68:    fwrite(buff, strlen(buff), 1, file);
    %%%%%:   68-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   69:    in.close();
    %%%%%:   69-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   70:    fclose(file);
    %%%%%:   70-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   71:    send(fd, "注册成功", sizeof("注册成功"), 0);
    %%%%%:   71-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   72:    cout << user1 << "注册成功" << endl;
    %%%%%:   72-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   72-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   72-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:   73:    return true;
    %%%%%:   73-block  0
        -:   74:}
        -:   75:
function _Z9userLoginv called 0 returned 0% blocks executed 0%
    #####:   76:bool userLogin(){
    #####:   77:    char buff[1024] = {0};
    #####:   78:    recv(fd, buff, 1024, 0);
    %%%%%:   78-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   79:    ifstream in("/tmp/info.txt");
    %%%%%:   79-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    $$$$$:   79-block  1
call    4 never executed
    #####:   80:    string info;
    %%%%%:   80-block  0
call    0 never executed
    %%%%%:   80-block  1
call    1 never executed
    $$$$$:   80-block  2
call    2 never executed
        -:   81:    char user[100], passwd[100], user1[100], passwd1[100];
    #####:   82:    split(buff, user1, passwd1, ':');
call    0 never executed
    #####:   83:    while (getline(in, info)){
    %%%%%:   83-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   83-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   83-block  2
branch  6 never executed
branch  7 never executed
    %%%%%:   83-block  3
    #####:   84:        split(info.c_str(), user, passwd, ':');
    %%%%%:   84-block  0
call    0 never executed
call    1 never executed
    #####:   85:        if (strcmp(user, user1) == 0 && strcmp(passwd, passwd1) == 0){
branch  0 never executed
branch  1 never executed
    %%%%%:   85-block  0
branch  2 never executed
branch  3 never executed
    #####:   86:            send(fd, "登录成功", sizeof("登录成功"), 0);
    %%%%%:   86-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   87:            cout << user << "登录成功" << endl;
    %%%%%:   87-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   87-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   87-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:   88:            in.close();
    %%%%%:   88-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   89:            return true;
    %%%%%:   89-block  0
        -:   90:        }
        -:   91:    }
    #####:   92:    send(fd, "用户名或密码错误", sizeof("用户名或密码错误"), 0);
    %%%%%:   92-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   93:    return false;
    %%%%%:   93-block  0
        -:   94:}
        -:   95:
function _Z6serverv called 0 returned 0% blocks executed 0%
    #####:   96:void server(){
    #####:   97:    printf("服务器启动\n");
    %%%%%:   97-block  0
call    0 never executed
        -:   98:    while (1){
        -:   99:        struct sockaddr_in fromaddr;
    #####:  100:        socklen_t len = sizeof(fromaddr);
    #####:  101:        fd = accept(serverfd, (struct sockaddr*)&fromaddr, &len);
    %%%%%:  101-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  102:        if (fd == -1){
    %%%%%:  102-block  0
branch  0 never executed
branch  1 never executed
    #####:  103:            printf("客户端连接出错...\n");
    %%%%%:  103-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  104:            continue;
    %%%%%:  104-block  0
    %%%%%:  104-block  1
        -:  105:        }
    #####:  106:        char backup[100] = {0};
    #####:  107:        char choice[5] = {0};
    #####:  108:        bool flag = false;
    %%%%%:  108-block  0
    #####:  109:        while (!flag) {
    %%%%%:  109-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  109-block  1
    #####:  110:            recv(fd, choice, sizeof(choice), 0);
    %%%%%:  110-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  111:            switch (choice[0]) {
    %%%%%:  111-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
    #####:  112:                case '1':
    #####:  113:                    flag = userRegister();
    %%%%%:  113-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  114:                    break;
    %%%%%:  114-block  0
    #####:  115:                case '2':
    #####:  116:                    flag = userLogin();
    %%%%%:  116-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  117:                    break;
    %%%%%:  117-block  0
        -:  118:            }
        -:  119:        }
    #####:  120:        recv(fd, backup, sizeof(backup), 0);
    %%%%%:  120-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  121:        FILE *f = fopen(backup, "wb");
    %%%%%:  121-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  122:        if (f == NULL){
    %%%%%:  122-block  0
branch  0 never executed
branch  1 never executed
    #####:  123:            send(fd, "open file fail", sizeof("open file fail"), 0);
    %%%%%:  123-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  124:            cout << "open file fail" << endl;
    %%%%%:  124-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  124-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  125:            continue;
    %%%%%:  125-block  0
        -:  126:        }
    #####:  127:        send(fd, "file uploading...\n", sizeof("file uploading..."), 0);
    %%%%%:  127-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  128:        char buf[1024] = {0};
    %%%%%:  128-block  0
        -:  129:        int count;
    #####:  130:        while ((count = recv(fd, buf, sizeof(buf), 0)) > 0){
    %%%%%:  130-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  130-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  130-block  2
    #####:  131:            fwrite(buf, count, 1, f);
    %%%%%:  131-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  132:        }
    #####:  133:        cout << "success! Back up in: " << backup << endl;
    %%%%%:  133-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  133-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  133-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  134:        fclose(f);
    %%%%%:  134-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  135:        close(fd);
    %%%%%:  135-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  136:    }
    %%%%%:  136-block  0
        -:  137:}
        -:  138:
function main called 1 returned 0% blocks executed 50%
        1:  139:int main() {
        1:  140:    init();
        1:  140-block  0
call    0 returned 0
    #####:  141:    server();
call    0 never executed
    #####:  142:}
